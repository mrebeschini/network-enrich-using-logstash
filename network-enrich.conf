input {
  generator {
    lines => [
      '{"source.ip": "16.242.215.10"}',
      '{"source.ip": "16.242.227.13"}'
    ]
    count => 5
  }
}

filter {
  json {
    source => "message"
  }

if [source.ip] {
    ruby {
      code => 'ip_as_int = IPAddr.new(event.get("source.ip")).to_i; 
               event.set("source-ip-as-int", ip_as_int)'
    }

    jdbc_static {
      loaders => [ 
        {
          id => "networks"
          query => "SELECT ip_from, ip_to, name FROM networks"
          local_table => "networks"
        }
      ]
      local_db_objects => [ 
        {
          name => "networks"
          index_columns => ["ip_from"]
          columns => [
            ["ip_from", "int"],
            ["ip_to", "int"],
            ["name", "varchar(128)"]
          ]
          local_table => "networks"
        }
      ]
      local_lookups => [ 
        {
          query => "SELECT name FROM networks WHERE ip_from < :ip AND ip_to > :ip"
          parameters => {ip => "[source-ip-as-int]"}
          target => "networks"
        }
      ]
    
      add_field => { "network.name" => "%{[networks][0][name]}" }
      remove_field => ["networks", "source-ip-as-int"]
    
      staging_directory => "/tmp/logstash/jdbc_static/import_data"
      loader_schedule => "* */2 * * *" # run loaders every 2 hours
      jdbc_user => "matteo"
      jdbc_password => "matteo"
      jdbc_driver_class => "org.mariadb.jdbc.Driver"
      jdbc_connection_string => "jdbc:mysql://localhost:3306/enrichment"
    }
  }
}

output {
  stdout {
    codec => rubydebug {metadata => true}
  }
}
